// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<Component /> didMount is not required 1`] = `
<h1>
  No need for didMount prop for rendering!
</h1>
`;

exports[`<Component /> didUpdate is not required 1`] = `
<h1>
  Can render without didUpdate prop!
</h1>
`;

exports[`<Component /> getSnapshotBeforeUpdate is not required 1`] = `
<h1>
  getSnapshotBeforeUpdate prop is not necessary for render!
</h1>
`;

exports[`<Component /> rendering prefers \`render\` over \`children\` 1`] = `
<div>
  <h1>
    Render with an actual "render" prop
  </h1>
</div>
`;

exports[`<Component /> rendering renders with children render prop 1`] = `
<div>
  <h1>
    Using children prop as render prop!
  </h1>
  <p>
    This is a pretty neat pattern. I'm really glad someone thought of it.
  </p>
</div>
`;

exports[`<Component /> rendering renders with normal children 1`] = `
<div>
  <h1>
    Some regular children!
  </h1>
  <p>
    This is another child in the regular children group.
  </p>
</div>
`;

exports[`<Component /> rendering renders without children 1`] = `null`;

exports[`<Component /> rendering renders without figuritively exploding 1`] = `
<div>
  Heyyyooooo
</div>
`;

exports[`<Component /> shouldUpdate is not required 1`] = `
<h1>
  Can render without shouldUpdate prop.
</h1>
`;

exports[`<Component /> state calls getInitialState 1`] = `
<div>
  <h1>
    Jane Fonda
  </h1>
  <h2>
    Favorites
  </h2>
  <ol>
    <li>
      Color: 
      green
    </li>
    <li>
      Food: 
      calzones
    </li>
  </ol>
</div>
`;

exports[`<Component /> state receives initialState 1`] = `
<div>
  <h1>
    Henry Winkler
  </h1>
  <h2>
    Favorites
  </h2>
  <ol>
    <li>
      Color: 
      purple
    </li>
    <li>
      Food: 
      cheeseburgers
    </li>
  </ol>
</div>
`;

exports[`<Component /> willUnmount is not required 1`] = `
<h1>
  Don't need willUnmount prop in order to render!
</h1>
`;
